{"ast":null,"code":"var _jsxFileName = \"/Users/machanghong/Desktop/app/client/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport Wall from './Wall';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      credentials: {\n        email: '',\n        password: ''\n      },\n      errorMessage: '',\n      successMessage: '',\n      message: ''\n    };\n\n    this.login = () => {\n      console.log(typeof this.state.credentials);\n      this.setState({\n        successMessage: null\n      });\n      this.setState({\n        errorMessage: null\n      });\n      console.log(this.state.credentials);\n      fetch('http://localhost:8000/auth/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.credentials)\n      }).then(data => {\n        if (data.ok) {\n          this.setState({\n            successMessage: data\n          });\n          return data.json();\n        } else {\n          throw data;\n        }\n      }).then(data => {\n        console.log(data.token); //this.props.postMessage(data.token);\n      }).catch(error => console.error(error));\n    };\n\n    this.register = () => {\n      this.setState({\n        errorMessage: null\n      });\n      this.setState({\n        successMessage: null\n      });\n      console.log(this.state.credentials);\n      fetch('http://localhost:8000/api/users/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.credentials)\n      }).then(data => {\n        if (data.ok) {\n          return data.json();\n        } else {\n          throw data;\n        }\n      }).then(data => {\n        console.log(data);\n      }).catch(error => {\n        this.setState({\n          errorMessage: error\n        });\n      });\n    };\n\n    this.postMessage = () => {\n      return fetch('http://localhost:8000/api/wall/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        //Authorization: `Token ${this.props.token}`,\n        body: JSON.stringify({\n          'message': this.state.message\n        })\n      }).then(data => data.json()).then(data => {\n        console.log(data);\n      }).catch(error => console.error(error));\n    };\n\n    this.inputChanged = event => {\n      const cred = this.state.credentials;\n      cred[event.target.name] = event.target.value;\n      this.setState({\n        credentials: cred\n      });\n    };\n\n    this.inputMessage = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n      console.log(this.state.message);\n    };\n  }\n\n  render() {\n    let status;\n\n    if (this.state.errorMessage) {\n      status = /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"error\",\n        children: \"Something went wrong, please try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 22\n      }, this);\n    } else if (this.state.successMessage) {\n      status = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Login in successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: this.inputMessage,\n          name: \"message\",\n          value: this.state.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            this.postMessage().then(e => {\n              this.props.refreshPost();\n            });\n          },\n          children: \"Post Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 22\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login user form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: this.state.credentials.username,\n          onChange: this.inputChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: this.state.credentials.password,\n          onChange: this.inputChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.login,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.register,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/machanghong/Desktop/app/client/src/components/Login.js"],"names":["React","Component","Wall","Login","state","credentials","email","password","errorMessage","successMessage","message","login","console","log","setState","fetch","method","headers","body","JSON","stringify","then","data","ok","json","token","catch","error","register","postMessage","inputChanged","event","cred","target","name","value","inputMessage","render","status","e","props","refreshPost","username"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Wall from './Wall'\n\nclass Login extends Component {\n    state = {\n        credentials: { email: '', password: '' },\n        errorMessage: '',\n        successMessage: '',\n        message: ''\n    }\n\n    login = () => {\n        console.log(typeof (this.state.credentials))\n        this.setState({ successMessage: null })\n        this.setState({ errorMessage: null });\n        console.log(this.state.credentials)\n        fetch('http://localhost:8000/auth/', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(this.state.credentials)\n        })\n            .then(data => {\n                if (data.ok) {\n                    this.setState({ successMessage: data })\n                    return data.json()\n                } else {\n                    throw data;\n                }\n            })\n            .then(\n                data => {\n                    console.log(data.token)\n                    //this.props.postMessage(data.token);\n                }\n            )\n            .catch(error => console.error(error))\n    }\n\n    register = () => {\n        this.setState({ errorMessage: null });\n        this.setState({ successMessage: null })\n        console.log(this.state.credentials)\n        fetch('http://localhost:8000/api/users/', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(this.state.credentials)\n        })\n            .then(data => {\n                if (data.ok) {\n                    return data.json()\n                } else {\n                    throw data;\n                }\n            })\n            .then(\n                data => {\n                    console.log(data);\n\n                }\n            )\n            .catch(error => {\n\n                this.setState({ errorMessage: error });\n            })\n    }\n\n    postMessage = () => {\n        return fetch('http://localhost:8000/api/wall/', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            //Authorization: `Token ${this.props.token}`,\n            body: JSON.stringify({ 'message': this.state.message })\n        })\n            .then(data => data.json())\n            .then(data => { console.log(data) })\n            .catch(error => console.error(error))\n\n    }\n\n    inputChanged = event => {\n        const cred = this.state.credentials;\n        cred[event.target.name] = event.target.value;\n        this.setState({ credentials: cred });\n    }\n\n    inputMessage = event => {\n\n        this.setState({ [event.target.name]: event.target.value })\n        console.log(this.state.message)\n    }\n\n\n\n    render() {\n        let status;\n        if (this.state.errorMessage) {\n            status = <h3 className=\"error\">Something went wrong, please try again.</h3>\n        } else if (this.state.successMessage) {\n            status = <div><h3>Login in successfully!</h3>\n                <textarea onChange={this.inputMessage}\n                    name='message'\n                    value={this.state.message}></textarea>\n                <button onClick={() => {\n                    this.postMessage()\n                        .then(e => {\n                            this.props.refreshPost()\n                        })\n                }}>Post Message</button></div>\n        }\n        return (\n            <div>\n                <h1>Login user form</h1>\n\n                <label>\n                    Username:\n                    <input type=\"text\" name=\"username\"\n                        value={this.state.credentials.username}\n                        onChange={this.inputChanged} />\n                </label>\n                <br />\n                <label>\n                    Password:\n                    <input type=\"password\" name=\"password\"\n                        value={this.state.credentials.password}\n                        onChange={this.inputChanged} />\n                </label>\n                <br />\n                <button onClick={this.login}>Login</button>\n                <button onClick={this.register}>Register</button>\n                {status}\n\n                { }\n            </div>\n        )\n    }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}