{"ast":null,"code":"var _jsxFileName = \"/Users/machanghong/Desktop/app/client/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      credentials: {\n        username: '',\n        password: ''\n      },\n      errorMessage: '',\n      successMessage: ''\n    };\n\n    this.login = event => {\n      this.setState({\n        successMessage: null\n      });\n      this.setState({\n        errorMessage: null\n      });\n      console.log(this.state.credentials);\n      fetch('http://localhost:8000/auth/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.credentials)\n      }).then(data => {\n        if (data.ok) {\n          this.setState({\n            successMessage: data\n          });\n          return data.json();\n        } else {\n          throw data;\n        }\n      }).then(data => {\n        console.log(data.token);\n        this.props.userLogin(data.token);\n      }).catch(error => console.error(error));\n    };\n\n    this.register = event => {\n      this.setState({\n        errorMessage: null\n      });\n      this.setState({\n        successMessage: null\n      });\n      console.log(this.state.credentials);\n      fetch('http://localhost:8000/api/users/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.state.credentials)\n      }).then(data => {\n        if (data.ok) {\n          return data.json();\n        } else {\n          throw data;\n        }\n      }).then(data => {\n        console.log(data);\n      }).catch(error => {\n        this.setState({\n          errorMessage: error\n        });\n      });\n    };\n\n    this.inputChanged = event => {\n      const cred = this.state.credentials;\n      cred[event.target.name] = event.target.value;\n      this.setState({\n        credentials: cred\n      });\n    };\n  }\n\n  render() {\n    let status;\n\n    if (this.state.errorMessage) {\n      status = /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"error\",\n        children: \"Something went wrong, please try again.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 22\n      }, this);\n    } else if (this.state.successMessage) {\n      status = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Login in successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 58\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.postMessage,\n          children: \"Post Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 73\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 22\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login user form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: this.state.credentials.username,\n          onChange: this.inputChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: this.state.credentials.password,\n          onChange: this.inputChanged\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.login,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.register,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/machanghong/Desktop/app/client/src/components/Login.js"],"names":["React","Component","Login","state","credentials","username","password","errorMessage","successMessage","login","event","setState","console","log","fetch","method","headers","body","JSON","stringify","then","data","ok","json","token","props","userLogin","catch","error","register","inputChanged","cred","target","name","value","render","status","postMessage"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Login extends Component {\n    state = {\n        credentials: { username: '', password: '' },\n        errorMessage: '',\n        successMessage:''\n    }\n\n    login = event => {\n        this.setState({ successMessage: null })\n        this.setState({ errorMessage: null });\n        console.log(this.state.credentials)\n        fetch('http://localhost:8000/auth/', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(this.state.credentials)\n        })\n            .then(data => {\n                if (data.ok) {\n                    this.setState({ successMessage:data})\n                    return data.json()\n                } else {\n                    throw data;\n                }})\n            .then(\n                data => {\n                    console.log(data.token)\n                    this.props.userLogin(data.token);\n                }\n            )\n            .catch(error => console.error(error))\n    }\n\n    register = event => {\n        this.setState({ errorMessage: null });\n        this.setState({ successMessage: null })\n        console.log(this.state.credentials)\n        fetch('http://localhost:8000/api/users/', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify(this.state.credentials)\n        })\n            .then(data => {\n                if (data.ok) {\n                    return data.json()\n                }else {\n                    throw data;\n                }})\n            .then(\n                data => {\n                    console.log(data);\n                    \n                }\n            )\n            .catch(error => {\n                \n                this.setState({ errorMessage: error });\n            })\n    }\n\n    postMessage\n\n    inputChanged = event => {\n        const cred = this.state.credentials;\n        cred[event.target.name] = event.target.value;\n        this.setState({ credentials: cred });\n    }\n\n    render(){\n        let status;\n        if (this.state.errorMessage){\n            status = <h3 className=\"error\">Something went wrong, please try again.</h3>\n        } else if (this.state.successMessage){\n            status = <div><h3>Login in successfully!</h3><input></input><button onClick={this.postMessage}>Post Message</button></div>\n        }\n    return (\n        <div>\n            <h1>Login user form</h1>\n\n            <label>\n                Username:\n                <input type=\"text\" name=\"username\"\n                    value={this.state.credentials.username}\n                    onChange={this.inputChanged} />\n            </label>\n            <br />\n            <label>\n                Password:\n                <input type=\"password\" name=\"password\"\n                    value={this.state.credentials.password}\n                    onChange={this.inputChanged} />\n            </label>\n            <br />\n            <button onClick={this.login}>Login</button>\n            <button onClick={this.register}>Register</button>\n            {status}\n        {}\n        </div>\n    )}\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}